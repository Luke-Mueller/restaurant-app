{"version":3,"sources":["components/EnterAnimation/EnterAnimation.js","components/ButtonComps/Button/Button.js","components/LandingComps/LandingContent/LandingContent.js","components/LandingComps/LandingPage/LandingPage.js","components/Backdrop/Backdrop.js","components/Details/Details.js","components/UserInputComps/UserInput/UserInput.js","components/UserInputComps/UserOption/UserOption.js","utils/states.js","utils/globalFuncs.js","containers/SearchForm/SearchForm.js","components/Header/Header.js","components/ButtonComps/PageBtns/PageBtns.js","components/TableComps/Row/Row.js","components/TableComps/Table/Table.js","containers/MainPage/MainPage.js","utils/globalVars.js","App.js","serviceWorker.js","index.js"],"names":["EnterAnimation","props","classname","entered","className","Button","onClick","onMouseUp","type","value","imgClassName","src","imgSrc","alt","imgAlt","children","LandingContent","divClassName","h2ClassName","text","LandingPage","buttonClassName","loaded","setEntered","btnValue","Backdrop","Details","details","name","city","state","attire","genre","hours","telephone","website","setShowDetails","UserInput","userInput","UserOption","key","myKey","content","States","abb","CreateOptions","attr","arr","map","idx","option","Filter","by","val","err","resArr","filter","restaurant","toUpperCase","includes","length","Save","res","attrArr","includesArr","forEach","element","elAttr","elAttrArr","split","push","flat","abt","SearchForm","useState","attireInput","setAttireInput","genreInput","setGenreInput","stateInput","setStateInput","textInput","setTextInput","useEffect","query","attireOptions","attireArr","genreOptions","genreArr","stateOptions","onSubmit","e","preventDefault","onChange","target","placeholder","Header","PageBtns","backBtn","forwardBtn","page","setPage","maxPages","Row","Table","restaurants","paginatedResult","setDetails","MainPage","setPaginatedResult","showDetails","Math","ceil","queryResult","paginatedArr","indexOf","start","paginate","bClassName","dClassName","ITEMS_PER_PAGE","App","setAttireArr","setGenreArr","setLoaded","setQueryResult","restaurantArr","setRestaurantArr","fetch","headers","Authorization","then","response","json","genres","attires","catch","console","log","queries","error","attireErr","genreErr","stateArr","textArr","textErr","sortedArr","sort","a","b","nameA","nameB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4615a105.chunk.js","sourcesContent":["import React from 'react';\n\nimport './EnterAnimation.css';\n\nconst EnterAnimation = props => {\n  let classname;\n  props.entered ?\n    classname = \"EnterAnimation active\" :\n    classname = \"EnterAnimation\";\n\n  return (\n    <div className={classname}>\n        <div className=\"EnterAnimation__div-top\" />\n        <div className=\"EnterAnimation__div-right\" />\n        <div className=\"EnterAnimation__div-bottom\" />\n        <div className=\"EnterAnimation__div-left\" />\n    </div>\n  );\n};\n\nexport default EnterAnimation;\n","import React from 'react';\n\nconst Button = props => {\n  return (\n    <button\n      className={props.className}\n      onClick={props.onClick}\n      onMouseUp={props.onMouseUp}\n      type={props.type}\n      value={props.value}>\n      <img\n        className={props.imgClassName}\n        src={props.imgSrc}\n        alt={props.imgAlt} />\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nconst LandingContent = props => {\n  return (\n    <div className={props.className}>\n      <img\n        className={props.imgClassName}\n        src={props.imgSrc}\n        alt={props.imgAlt} />\n      <div className={props.divClassName} />\n      <h2 className={props.h2ClassName}>{props.text}</h2>\n    </div>\n  );\n};\n\nexport default LandingContent;\n","import React from 'react';\n\nimport Button from '../../ButtonComps/Button/Button';\nimport LandingContent from '../LandingContent/LandingContent';\n\nimport './LandingPage.css';\n\nconst LandingPage = props => {\n  let imgClassName, divClassName, h2ClassName, buttonClassName;\n\n  if (props.loaded) {\n    buttonClassName = 'LandingPage__button active';\n    imgClassName = 'LandingPage__img active';\n    divClassName = 'LandingPage__div active';\n    h2ClassName = 'LandingPage__h2 active';\n  } else {\n    buttonClassName = 'LandingPage__button';\n    imgClassName = 'LandingPage__img';\n    divClassName = 'LandingPage__div';\n    h2ClassName = 'LandingPage__h2';\n  };\n\n  return (\n    <div className=\"LandingPage\">\n      <LandingContent\n        className=\"LandingContent\"\n        divClassName={divClassName}\n        h2ClassName={h2ClassName}\n        imgAlt=\"Spectrum Logo\" \n        imgClassName={imgClassName}\n        imgSrc=\"/assets/images/logo.png\"\n        text={props.text} />\n      <Button\n        className={buttonClassName}\n        onMouseUp={() => props.setEntered(true)}\n        type=\"button\">\n        <span>{props.btnValue}</span>\n      </Button>\n    </div>\n  );\n};\n\nexport default LandingPage;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return (\n    <div className={props.className}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport Button from '../ButtonComps/Button/Button';\n\nimport './Details.css';\n\nconst Details = props => {\n  return (\n    <div className={props.className}>\n      <h3>{props.details.name}</h3>\n      <h5>{props.details.city}, {props.details.state}</h5>\n      <div className={props.divClassName}>\n        <h5>{props.details.attire}</h5>\n        <h5>{props.details.genre}</h5>\n        <h5>{props.details.hours}</h5>\n        <h5>{props.details.telephone}</h5>\n        <h5>{props.details.website}</h5>\n      </div>\n      <Button\n        className=\"Details__button\"\n        onClick={() => props.setShowDetails(false)}\n        type=\"button\">\n        close\n      </Button>\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\n\nconst UserInput = props => {\n\n  let userInput;\n  if (props.type === 'select') {\n    userInput = (\n      <select {...props}>\n        {props.children}\n      </select>\n    );\n  } else userInput = <input {...props} />;\n\n  return (\n    <div className={props.className}>\n      {userInput}\n    </div>\n  );\n};\n\nexport default UserInput;\n","import React from 'react';\n\nconst UserOption = props => {\n  return (\n    <option key={props.myKey} value={props.value}>\n      {props.content}\n    </option>\n  );\n};\n\nexport default UserOption;\n","const States = [\n  {\n    name: \"Alabama\",\n    abb: \"AL\"\n  },\n  {\n    name: \"Alaska\",\n    abb: \"AK\"\n  },\n  {\n    name: \"Arizona\",\n    abb: \"AZ\"\n  },\n  {\n    name: \"Arkansas\",\n    abb: \"AR\"\n  },\n  {\n    name: \"California\",\n    abb: \"CA\"\n  },\n  {\n    name: \"Colorado\",\n    abb: \"CO\"\n  },\n  {\n    name: \"Connecticut\",\n    abb: \"CT\"\n  },\n  {\n    name: \"Delaware\",\n    abb: \"DE\"\n  },\n  {\n    name: \"District of Columbia\",\n    abb: \"DC\"\n  },\n  {\n    name: \"Florida\",\n    abb: \"FL\"\n  },\n  {\n    name: \"Georgia\",\n    abb: \"GA\"\n  },\n  {\n    name: \"Hawaii\",\n    abb: \"HI\"\n  },\n  {\n    name: \"Idaho\",\n    abb: \"ID\"\n  },\n  {\n    name: \"Illinois\",\n    abb: \"IL\"\n  },\n  {\n    name: \"Indiana\",\n    abb: \"IN\"\n  },\n  {\n    name: \"Iowa\",\n    abb: \"IA\"\n  },\n  {\n    name: \"Kansas\",\n    abb: \"KS\"\n  },\n  {\n    name: \"Kentucky\",\n    abb: \"KY\"\n  },\n  {\n    name: \"Louisiana\",\n    abb: \"LA\"\n  },\n  {\n    name: \"Maine\",\n    abb: \"ME\"\n  },\n  {\n    name: \"Maryland\",\n    abb: \"MD\"\n  },\n  {\n    name: \"Massachusettes\",\n    abb: \"MA\"\n  },\n  {\n    name: \"Michigan\",\n    abb: \"MI\"\n  },\n  {\n    name: \"Minnesota\",\n    abb: \"MN\"\n  },\n  {\n    name: \"Mississippi\",\n    abb: \"MS\"\n  },\n  {\n    name: \"Missouri\",\n    abb: \"MO\"\n  },\n  {\n    name: \"Montana\",\n    abb: \"MT\"\n  },\n  {\n    name: \"Nebraska\",\n    abb: \"NE\"\n  },\n  {\n    name: \"Nevada\",\n    abb: \"NV\"\n  },\n  {\n    name: \"New Hampshire\",\n    abb: \"NH\"\n  },\n  {\n    name: \"New Jersey\",\n    abb: \"NJ\"\n  },\n  {\n    name: \"New Mexico\",\n    abb: \"NM\"\n  },\n  {\n    name: \"New York\",\n    abb: \"NY\"\n  },\n  {\n    name: \"North Carolina\",\n    abb: \"NC\"\n  },\n  {\n    name: \"North Dakota\",\n    abb: \"ND\"\n  },\n  {\n    name: \"Ohio\",\n    abb: \"OH\"\n  },\n  {\n    name: \"Oklahoma\",\n    abb: \"OK\"\n  },\n  {\n    name: \"Oregon\",\n    abb: \"OR\"\n  },\n  {\n    name: \"Pennsylvania\",\n    abb: \"PA\"\n  },\n  {\n    name: \"Rhode Island\",\n    abb: \"RI\"\n  },\n  {\n    name: \"South Dakota\",\n    abb: \"SD\"\n  },\n  {\n    name: \"Tennessee\",\n    abb: \"TN\"\n  },\n  {\n    name: \"Texas\",\n    abb: \"TX\"\n  },\n  {\n    name: \"Utah\",\n    abb: \"UT\"\n  },\n  {\n    name: \"Vermont\",\n    abb: \"VT\"\n  },\n  {\n    name: \"Virginia\",\n    abb: \"VA\"\n  },\n  {\n    name: \"Washington\",\n    abb: \"WA\"\n  },\n  {\n    name: \"West Virginia\",\n    abb: \"WV\"\n  },\n  {\n    name: \"Wisconsin\",\n    abb: \"WI\"\n  },\n  {\n    name: \"Wyoming\",\n    abb: \"WY\"\n  }\n];\n\nexport default States;\n","import React from 'react';\n\nimport States from '../utils/states';\nimport UserOption from '../components/UserInputComps/UserOption/UserOption';\n\nexport const CreateOptions = (attr, arr) => {\n  let options;\n  if (attr === 'state') {\n    options = States.map((state, idx) => {\n      return (\n        <UserOption\n          content={state.name}\n          key={idx}\n          value={state.abb} />\n      )\n    });\n  } else {\n    options = arr.map((option, idx) => {\n      return (\n        <UserOption\n          content={option}\n          key={idx}\n          value={option} />\n      )\n    });\n  };\n  return options;\n};\n\nexport const Filter = (arr, by, val, err) => {\n  let resArr;\n  if (by === 'text') {\n    if (val !== '') {\n      resArr = arr.filter(restaurant => {\n        return (\n          restaurant.attire.toUpperCase().includes(val.toUpperCase()) ||\n          restaurant.city.toUpperCase().includes(val.toUpperCase()) ||\n          restaurant.genre.toUpperCase().includes(val.toUpperCase()) ||\n          restaurant.name.toUpperCase().includes(val.toUpperCase()) \n        );\n      });\n      if (!resArr.length) err = 'Your search found no results';\n    } else resArr = arr;\n  } else {\n    if (val !== '') {\n      resArr = arr.filter(restaurant => restaurant[by].includes(val));\n      if (!resArr.length && !err) err = `There are no results in that ${by}`;\n    } else resArr = arr;\n  };\n  return [resArr, err];\n};\n\nexport const Save = (attr, res) => {\n  const attrArr = [];\n  const includesArr = [];\n  res.forEach(element => {\n    const elAttr = element[attr];\n    const includes = elAttr.includes(',');\n    if (includes) {\n      const elAttrArr = elAttr.split(',');\n      includesArr.push(elAttrArr);\n    } else {\n      const found = attrArr.includes(elAttr);\n      if (!found) attrArr.push(elAttr);\n    };\n  });\n  const flatIncludesArr = includesArr.flat();\n  flatIncludesArr.forEach(abt => {\n    const found = attrArr.includes(abt);\n    if (!found) attrArr.push(abt);\n  });\n  return attrArr;\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Button from '../../components/ButtonComps/Button/Button';\nimport UserInput from '../../components/UserInputComps/UserInput/UserInput';\nimport UserOption from '../../components/UserInputComps/UserOption/UserOption';\n\nimport { CreateOptions } from '../../utils/globalFuncs';\n\nimport './SearchForm.css';\n\nconst SearchForm = props => {\n  const [attireInput, setAttireInput] = useState('');\n  const [genreInput, setGenreInput] = useState('');\n  const [stateInput, setStateInput] = useState('');\n  const [textInput, setTextInput] = useState('');\n\n  useEffect(() => {\n    props.query([attireInput, genreInput, stateInput, textInput]);\n    // eslint-disable-next-line\n  }, [attireInput, genreInput, stateInput, textInput]);\n\n  const attireOptions = CreateOptions('attire', props.attireArr);\n  const genreOptions = CreateOptions('genre', props.genreArr);\n  const stateOptions = CreateOptions('state');\n\n  const submit = e => {\n    props.query(genreInput, stateInput, textInput);\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"SearchForm\" onSubmit={submit}>\n      <div className=\"SearchForm__div-input\">\n        <UserInput\n          className=\"SearchForm__input\"\n          type=\"input\"\n          name=\"text\"\n          onChange={e => setTextInput(e.target.value)}\n          placeholder=\"Enter name, city, or genre\"\n          value={textInput} />\n        <Button\n          className=\"SearchForm__button\"\n          imgAlt=\"Magnifying glass\"\n          imgClassName=\"SearchForm__img\"\n          imgSrc=\"/assets/images/search.png\"\n          type=\"submit\" />\n      </div>\n      <div className=\"SearchForm__div-select\">\n        <UserInput\n          className=\"SearchForm__select\"\n          name=\"attire\"\n          onChange={e => setAttireInput(e.target.value)}\n          type=\"select\"\n          value={attireInput}>\n          <UserOption\n            content=\"Filter by attire (All)\"\n            myKey=\"default\"\n            value=\"\" />\n          {attireOptions}\n        </UserInput>\n        <UserInput\n          className=\"SearchForm__select\"\n          name=\"genre\"\n          onChange={e => setGenreInput(e.target.value)}\n          type=\"select\"\n          value={genreInput}>\n          <UserOption\n            content=\"Filter by genre (All)\"\n            myKey=\"default\"\n            value=\"\" />\n          {genreOptions}\n        </UserInput>\n        <UserInput\n          className=\"SearchForm__select\"\n          name=\"state\"\n          onChange={e => setStateInput(e.target.value)}\n          type=\"select\"\n          value={stateInput} >\n          <UserOption\n            content=\"Filter by state (All)\" \n            myKey=\"default\"\n            value=\"\" />\n          {stateOptions}\n        </UserInput>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\n\nimport SearchForm from '../../containers/SearchForm/SearchForm';\n\nimport './Header.css';\n\nconst Header = props => {\n  return (\n    <header className=\"Header\">\n      <img\n        className=\"Header__img\"\n        src=\"/assets/images/logo.png\"\n        alt=\"Spectrum Logo\" />\n      <SearchForm\n        attireArr={props.attireArr}\n        genreArr={props.genreArr}\n        query={props.query} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport Button from '../Button/Button';\n\nimport './PageBtns.css';\n\nconst PageBtns = props => {\n  let backBtn, forwardBtn;\n\n  // DEFINES BACK BUTTON\n  if (props.page !== 1) {\n    backBtn = (\n      <Button\n        className=\"PageBtns__button\"\n        imgAlt=\"Left arrow\"\n        imgSrc=\"/assets/images/arrow-left.png\"\n        imgClassName=\"PageBtns__img\"\n        onClick={() => props.setPage(props.page - 1)}\n        type=\"button\" />\n    );\n  } else backBtn = <div />;\n\n  // DEFINES FORWARD BUTTON\n  if (props.page < props.maxPages) {\n    forwardBtn = (\n      <Button\n      className=\"PageBtns__button\"\n      imgAlt=\"Right arrow\"\n      imgSrc=\"/assets/images/arrow-right.png\"\n      imgClassName=\"PageBtns__img\"\n      onClick={() => props.setPage(props.page + 1)}\n      type=\"button\" />\n    );\n  } else forwardBtn = <div />;\n\n  return (\n    <div className=\"PageBtns\">\n      {backBtn}\n      {forwardBtn}\n    </div>\n  );\n};\n\nexport default PageBtns;\n","import React from 'react';\n\nimport './Row.css';\n\nconst Row = props => {\n  return (\n    <div className=\"Row\" onClick={props.onClick}>\n      <div className=\"Row__div\">\n          <p className=\"Row__p-name\">{props.restaurant.name}</p>\n          <p className=\"Row__p\">{props.restaurant.telephone}</p>\n      </div>\n      <div className=\"Row__div\">\n        <p className=\"Row__p-city\">{props.restaurant.city}</p>\n        <p className=\"Row__p\">{props.restaurant.genre}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","import React from 'react';\n\nimport Row from '../Row/Row';\n\nconst Table = props => {\n  const restaurants = props.paginatedResult.map((restaurant, idx) => {\n    return (\n      <Row \n        key={idx} \n        onClick={() => props.setDetails(restaurant)}\n        restaurant={restaurant} \n        setDetails={props.setDetails}\n        setShowDetails={props.setShowDetails} />\n    )\n  });\n\n  return (\n    <div className={props.className}>\n      {restaurants}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\n\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport Details from '../../components/Details/Details';\nimport Header from '../../components/Header/Header';\nimport PageBtns from '../../components/ButtonComps/PageBtns/PageBtns';\nimport Table from '../../components/TableComps/Table/Table';\n\nimport './MainPage.css';\n\nimport { ITEMS_PER_PAGE } from '../../utils/globalVars';\n\nconst MainPage = props => {\n  const [details, setDetails] = useState([]);\n  const [paginatedResult, setPaginatedResult] = useState([]);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const maxPages = Math.ceil((props.queryResult.length) / ITEMS_PER_PAGE);\n\n  const paginate = arr => {\n    const paginatedArr = arr.filter(restaurant => {\n      const idx = arr.indexOf(restaurant);\n      const start = (props.page - 1) * ITEMS_PER_PAGE;\n      const end = (start + ITEMS_PER_PAGE);\n      if (idx >= start && idx < end) return restaurant;\n      else return null;\n    });\n    setPaginatedResult(paginatedArr);\n  };\n\n  useEffect(() => {\n    paginate(props.queryResult);\n    // eslint-disable-next-line\n  }, [props.page, props.queryResult]);\n\n  const setDetailsHandler = details => {\n    setDetails(details)\n    setShowDetails(true);\n  };\n\n  let className, bClassName, dClassName;\n  props.entered ?\n    className = \"MainPage active\" :\n    className = \"MainPage\";\n  if (showDetails) {\n    bClassName = \"Backdrop active\";\n    dClassName = \"Details active\";\n  } else {\n    bClassName = \"Backdrop\";\n    dClassName = \"Details\";\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MainPage__div\" />\n      <Header\n        attireArr={props.attireArr}\n        genreArr={props.genreArr}\n        query={props.query} />\n      <Table\n        className=\"MainPage__table\"\n        ITEMS_PER_PAGE={ITEMS_PER_PAGE}\n        page={props.page}\n        paginatedResult={paginatedResult}\n        setDetails={setDetailsHandler}\n        setShowDetails={setShowDetails} />\n      <PageBtns\n        maxPages={maxPages}\n        page={props.page}\n        setPage={props.setPage} />\n      <Backdrop className={bClassName}>\n        <Details\n          className={dClassName}\n          details={details}\n          divClassName=\"Details__div\"\n          setShowDetails={setShowDetails}\n          showDetails={showDetails} />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default MainPage;\n","export const ITEMS_PER_PAGE = 10;\n\nexport const KEY = 'Api-Key q3MNxtfep8Gt';\n\nexport const URL = 'https://code-challenge.spectrumtoolbox.com/api/restaurants';\n","import React, { useState, useEffect } from 'react';\n\nimport EnterAnimation from './components/EnterAnimation/EnterAnimation';\nimport LandingPage from './components/LandingComps/LandingPage/LandingPage';\nimport MainPage from './containers/MainPage/MainPage';\n\nimport { Filter } from './utils/globalFuncs';\nimport { Save } from './utils/globalFuncs';\nimport { KEY } from './utils/globalVars';\nimport { URL } from './utils/globalVars';\n\nconst App = () => {    \n  const [attireArr, setAttireArr] = useState([]);\n  const [entered, setEntered] = useState(false);\n  const [genreArr, setGenreArr] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [page, setPage] = useState(1);\n  const [queryResult, setQueryResult] = useState([]);\n  const [restaurantArr, setRestaurantArr] = useState([]);\n\n  // SAVES ALL AVAILABLE ATTIRES, GENRES & RESTAURANTS FROM API\n  useEffect(() => {\n    fetch(URL, {\n      headers: {\n        Authorization: KEY\n      }\n    })\n      .then(response => response.json())\n      .then(res => {\n        const genres = Save('genre', res);\n        const attires = Save('attire', res);\n        setGenreArr(genres);\n        setAttireArr(attires);\n        setRestaurantArr(res);\n        query(['', '', '', ''], res);\n        setLoaded(true);\n      })\n      .catch(err => console.log(err));\n    // eslint-disable-next-line\n  }, []);\n\n  const query = (queries, arr) => {\n    let array, error, attireArr, attireErr, genreArr, genreErr, stateArr, stateErr, textArr, textErr;\n    if (arr) array = arr;\n    else array = restaurantArr;\n    // FILTERS QUERIES\n    [textArr, textErr] = Filter(array, 'text', queries[3], error);\n    [attireArr, attireErr] = Filter(textArr, 'attire', queries[0], textErr);\n    [genreArr, genreErr] = Filter(attireArr, 'genre', queries[1], attireErr);\n    [stateArr, stateErr] = Filter(genreArr, 'state', queries[2], genreErr);\n    error = stateErr;\n    // SORTS RESULT\n    let sortedArr = stateArr.sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA > nameB) return 1;\n      if (nameB > nameA) return -1;\n      return 0;\n    });\n    // CREATES ERROR RESULT\n    if (!sortedArr.length) {\n      sortedArr = [{\n        name: error,\n        city: '',\n        telephone: '',\n        genre: ''\n      }];\n    };\n    setQueryResult(sortedArr);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"App\">\n      <LandingPage\n        btnValue='ENTER'\n        entered={entered}\n        loaded={loaded}\n        setEntered={setEntered}\n        text='Your table is ready' />\n      <MainPage \n        attireArr={attireArr}\n        entered={entered} \n        genreArr={genreArr}\n        page={page}\n        query={query}\n        queryResult={queryResult}\n        restaurantArr={restaurantArr}\n        setPage={setPage} />\n      <EnterAnimation entered={entered} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}